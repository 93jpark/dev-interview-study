합병 정렬(Merge Sort)

부분 문제로 분할하고  비교해서 합병 정복(정렬)하는 알고리즘

​

합병 정렬 수행 과정

 전체 원소를 두개의 그룹으로 나눈다.

각 그룹을 또 두 그룹으로 나누기를 반복하여 원소의 수가 1이 될 때 분할을 중단한다.

분할된 두 그룹을 원소의 크기에 따라 정렬하여 합병하기를 반복하여 전체 원소들을 정렬한다.


수도 코드(Pseudo Code)

MergeSort(A, p, q)
입력: A[p] ~ A[q]
출력: 정렬된 A[p] ~ A[q]
if(p < q) { // 배열의 원소의 수가 2개 이상이면
   k = ⌊(p + q)/2⌋ // k = 중간 원소의 인덱스
   MergeSort(A, p, k) // 앞부분 순환 호출
   MergeSort(A, k+1, q) // 뒷부분 순환 호출
   A[p] ~ A[k]와 A[k + 1] ~ A[q]를 합병한다. 
}
⌊⌋ (floor function) : 바닥함수: ⌊x⌋는 x보다 크지 않은 정수 중 최대인 것

세부 수행순서는 코드에 따라 다를 수 있다.


​

시간복잡도

​

분할의 시간복잡도는 비교 과정이 없기 때문에 O(1)시간이 걸린다. 

정렬의 시간복잡도는 일반적으로 숫자의 비교 횟수로 나타낸다. 각 층에서 모든 숫자가 합병에 참여하고 있기 때문에 수행된 비교 횟수는 n이고 정렬의 시간복잡도는 O(n)이다. 

각 층은 n을 더 이상 나눌 수 없는 크기인 1이 될 때까지 1/2로 분할한다. k번 1/2로 분할하면 k개의 층이 생긴다. 

$n=2^k$n=2k​
이고, 층수는 

$k=\combi{\log }_2n$k=log2​n​
이다. 

​

따라서 합병 정렬의 시간복잡도는

$\left(분할의\ 시간복잡도\right)\times \left(층수\right)\times \left(정렬의\ 시간복잡도\right)$(분할의 시간복잡도)×(층수)×(정렬의 시간복잡도)​
$=\Omikron \left(\combi{1}\right)\times k\times \combi{\Omikron \left(n\right)=\Omikron \left(\combi{1}\right)\times \log }_2n\times \Omikron \left(n\right)$=Ο(1)×k×Ο(n)=Ο(1)×log2​n×Ο(n)​
$=\Omikron \left(n\log n\right)$=Ο(nlogn)​
이다.

​

합병 정렬 특징

분할 정복 알고리즘의 하나

정렬된 부분을 하나로 합병하는데 결과를 저장할 임시 배열 공간이 별로도 필요하기 때문에 공간 복잡도는 O(n)이다.

​

reference

⌊⌋ : 예문과 함께하는 수학 용어 사전(Open Dictionary PRO) (naver.com)

합병 정렬 - 위키백과, 우리 모두의 백과사전 (wikipedia.org)

양성봉. (2021). 알기 쉬운 알고리즘(개정판). 생능출판.